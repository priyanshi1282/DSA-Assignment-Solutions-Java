https://leetcode.com/problems/single-element-in-a-sorted-array/

solution :

class Solution {
    public int singleNonDuplicate(int[] nums) {
        int n= nums.length;
        
//         O(n)
        // int ans=0;
        // for(int i=0;i<n;i++)
        //     ans= ans^nums[i];
        // return ans;
        
        
        
//         O(log n)
        if(n==1)
            return nums[0];
        
        if(nums[0]!=nums[1])
            return nums[0];
        
        if(nums[n-1]!=nums[n-2])
            return nums[n-1];
       
        
        int s=0,e=n-1;
        while(s<=e){
            int mid= s+(e-s)/2;
            if(0<=mid && mid<n && nums[mid]!=nums[mid+1] && nums[mid]!=nums[mid-1])
                return nums[mid];
            else if(mid%2==0){
                if(nums[mid]==nums[mid+1])
                    s=mid+1;
                else
                    e=mid-1;
            }
            else{
                if(nums[mid]==nums[mid+1])
                    e=mid-1;
                else
                    s=mid+1;
            }
                
                
                
        }
        
        return -1;
        
    }
}